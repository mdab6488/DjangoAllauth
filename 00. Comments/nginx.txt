openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./nginx/ssl/nginx.key -out ./nginx/ssl/nginx.crt

openssl dhparam -out ./nginx/ssl/dhparam.pem 2048
chmod 600 ./nginx/ssl/dhparam.pem

openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./nginx/ssl/privkey.pem -out ./nginx/ssl/fullchain.pem
chmod 600 ./nginx/ssl/privkey.pem
chmod 600 ./nginx/ssl/fullchain.pem

apt update
apt install certbot python3-certbot-nginx

====================================================
# Generate private key
openssl genrsa -out nginx-selfsigned.key 2048

# Generate CSR (Certificate Signing Request)
openssl req -new -key nginx-selfsigned.key -out nginx-selfsigned.csr -subj "//CN=localhost"

# Generate self-signed certificate
openssl x509 -req -days 365 -in nginx-selfsigned.csr -signkey nginx-selfsigned.key -out nginx-selfsigned.crt

# Generate DH parameters
openssl dhparam -out dhparam.pem 


====================================================
For Production (Trusted Certificates):
Replace self-signed certificates with Let's Encrypt certificates (via Certbot).

Modify your Nginx config to work with Certbot:

nginx
Copy
# In your default.conf
server {
  listen 80;
  server_name yourdomain.com;
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }
  location / {
    return 301 https://$host$request_uri;
  }
}
Use a Docker Certbot setup to automate renewal.