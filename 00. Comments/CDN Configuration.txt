To configure AWS S3 as a CDN for serving static files, update your settings.py file with the following configurations:

Add These Settings:
# settings.py

# AWS S3 Configuration
AWS_QUERYSTRING_AUTH = False  # Disable query string authentication for public access
AWS_S3_MAX_MEMORY_SIZE = 100_000_000  # 100MB max memory size for uploads
AWS_S3_ADDRESSING_STYLE = 'path'  # Use path-style addressing for compatibility

# Cache control headers
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=31536000',  # Cache files for 1 year
}

# Static files configuration
static_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME')

# Optional: Serve media files from S3
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

Install Required Dependencies:
Install the boto3 library for AWS S3 integration:

pip install boto3 django-storages

Set Environment Variables:
Ensure the following environment variables are set in your .env file or Heroku config:

AWS_ACCESS_KEY_ID=your-access-key-id
AWS_SECRET_ACCESS_KEY=your-secret-access-key
AWS_STORAGE_BUCKET_NAME=your-bucket-name
AWS_S3_REGION_NAME=your-region

